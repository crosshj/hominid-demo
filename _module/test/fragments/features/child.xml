<Page>
    <!-- DATA -->
    <!-- FLOWS -->
    <!-- PAGE NAV BAR-->
    <PageNavBar label="Features" />
    <!-- PAGE CONTENT -->
    <PageContent>
        <Markdown>

## Status Legend

| Icon                          | Status                                                                   |
| ----------------------------- | ------------------------------------------------------------------------ |
| `icon:CheckCircle;green`      | Complete                                                                 |
| `icon:Construction;indigo900` | Work In Progress                                                         |
| `icon:Warning;amber800`       | To Do                                                                    |

* * *

[Deprecated Features](/features/deprecated)

## Data

| Status                        | Name / Link                                                             | Description                                   |
| ----------------------------- | ----------------------------------------------------------------------- | --------------------------------------------- |
| `icon:Construction;indigo900` | [Complex 1](/features/data/complex1)                                    | A complex data example.                       |
| `icon:Construction;indigo900` | [Complex 2](/features/data/complex2)                                    | An extension of data/complex1 which covers complex options lists scenarios |
| `icon:CheckCircle;green`      | [Get Opts](/features/data/getOpts)                                      | Read options data from DB.                    |
| `icon:CheckCircle;green`      | [JSON-ify](/features/data/JSONify)                                      | Submitting JSON string paramater to database. |
| `icon:CheckCircle;green`      | [Path-based](/features/data/pathBased)                                  | Read data from the URL path.                  |
| `icon:Warning;amber800`       | [Validation](/features/data/validation)                                 | Validate data from DB and in UI.              |

## Flows

| Status                        | Name / Link                                                             | Description                                                     |
| ----------------------------- | ----------------------------------------------------------------------- | --------------------------------------------------------------- |
| `icon:Construction;indigo900` | [Confirm](/features/flows/confirm)                                      | Add a popup step in a flow.                                     |
| `icon:Construction;indigo900` | [Query Call](/features/flows/query/call)                                | Call an API with Query, eg. Vertex API                          |
| `icon:Construction;indigo900` | [Query Multiple](/features/flows/query/multi)                           | Mulitiple Query components in one Flow.                         |
| `icon:Construction;indigo900` | [Navigate](/features/flows/navigate)                                    | Shows how to use the Navigate step in a flow.                   |
| `icon:Construction;indigo900` | [Query Static Params](/features/flows/query/staticParams)               | Submit a Query with static parameter.                           |
| `icon:Construction;indigo900` | [Query /w Params](/features/flows/query/params)                         | Submit a Query with parameters.                                 |
| `icon:Construction;indigo900` | [Query /w Static Params](/features/flows/args)                          | When an action triggers a flow, "pass data" to flow             |
| `icon:Construction;indigo900` | [Async Process](/features/flows/asyncProcess)                           | Use DB Workflows to execute long-running process.               |
| `icon:Construction;indigo900` | [Async Multi-Step](/features/flows/asyncMultiStep)                      | Use DB Workflows to execute a multi-step process.               |
| `icon:Construction;indigo900` | [Generalized Workflows](/features/flows/generalizedWorkflows)           | Workflows that aren't long-running but still need to save state |
| `icon:Construction;indigo900` | [Table Submit](/features/flows/tableSubmit)                             | Submit an entire table of data to a DB proc.                    |
| `icon:Construction;indigo900` | [Triggers](/features/flows/triggers)                                    | Trigger a flow when page loads or closes                         |
| `icon:Construction;indigo900` | [Set Data](/features/flows/setData)                                     | Manipulate global data.                                         |
| `icon:Construction;indigo900` | [Local Data](/features/flows/localData)                                 | Manipulate Flow data (flowArgs)                                  |

see also:

-   [Props / Dynamic Bind](/features/props/dynamicBind) - Subscribe component calls flow!

## Tables

| Status                        | Name / Link                                                            | Description                                                                                                           |
| ----------------------------- | ---------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |
| `icon:Construction;indigo900` | [Conditional Row Actions](/features/tables/ConditionalRowActions)      | Show actions on some rows but nt others                                                                               |
| `icon:Construction;indigo900` | [Encryption](/features/tables/Encryption)                              | Show an encryted table in a de-crypted state                                                                          |
| `icon:Construction;indigo900` | [Extensible Columns](/features/tables/ExtensibleCols)                  | Support regular components inside table cells, versus previous approach with column "variant"                         |
| `icon:Construction;indigo900` | [Nested w/ Configurable Columns](/features/tables/nestedColumnConfigs) | Custom columns based on Nest Level                                                                                    |
| `icon:Construction;indigo900` | [Sticky Columns](/features/tables/stickyColumns)                       | Pin columns to left or right, useful in horizontally scrolled tables                                                  |
| `icon:Construction;indigo900` | [Addon Elements](/features/tables/addonElements)                       | Add some rows at the bottom of table                                                                                  |
| `icon:Construction;indigo900` | [Nest Headers](/features/tables/nestHeaders)                           | Customize headers for nest levels.  Includes totals example.                                                          |
| `icon:Construction;indigo900` | [Table Forms](/features/tables/forms)                                  | provides way to fill values, including dynamic ones, in order to create or update entities through or within a table.  See also [props/dynamicBind](/features/props/dynamicBind) |
| `icon:Construction;indigo900` | [Nest Levels 0](/features/tables/nestLevels0)                          | Tables with no nest levels.                                                                                           |
| `icon:Construction;indigo900` | [Nest Levels 1](/features/tables/nestLevels1)                          | Tables with one nest level.                                                                                           |
| `icon:Construction;indigo900` | [Nest Levels 2](/features/tables/nestLevels2)                          | Tables with two nest levels.                                                                                          |
| `icon:Construction;indigo900` | [Nest Levels 3](/features/tables/nestLevels3)                          | Tables with three nest levels.                                                                                        |
| `icon:Construction;indigo900` | [Empty](/features/tables/empty)                                        | A table with no results in it.                                                                                        |
| `icon:Construction;indigo900` | [Complex 1](/features/tables/complex1)                                 | Complex Table Scenarios #1: lots of nesting and addons examples                                                       |

In most cases, components should be treated the same whether they render inside or outside a table.
However, there are cases, like with selecting rows, where the table and inner components should act in tandem and this calls for more complex data-binding.

See the table sections at the following links for further explorations of these concepts.

-   [Components / MUI Switch](/features/components/switch)
-   [Components / MUI Radio Button](/features/components/radioButton)
-   [Components / MUI Checkbox](/features/components/checkbox)

## Components

| Status                        | Name / Link                                                              | Description                                                                              |
| ----------------------------- | ------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------- |
| `icon:Construction;indigo900` | [Pills](/features/components/StandalonePills)                            | Pill indicator as a standalone component.                                                |
| `icon:CheckCircle;green`      | [Actions](/features/components/Actions)                                  | Anything that can trigger a flow when clicked, i.e Buttons, Links, Chips and IconButtons |
| `icon:CheckCircle;green`      | [Obscured](/features/components/obscured)                                | What obscured data looks like and how to configure it i.e. \*\*\* or ##.                 |
| `icon:CheckCircle;green`      | [MUI Icons](/features/components/MUIIcons)                               | MUI Icons                                                                                |
| `icon:CheckCircle;green`      | [Custom Icons](/features/components/NonMUIIcons)                         | Custom SVG icons which augment MUI icons.                                                |
| `icon:CheckCircle;green`      | [Hide Components](/features/components/HideComponent)                    | Hide a component based on some Data value                                                |
| `icon:CheckCircle;green`      | [MUI Textfield](/features/components/textField)                          | MUI Textfield Component, which also covers Input Variations including Select and Options |
| `icon:CheckCircle;green`      | [MUI Checkbox](/features/components/checkbox)                            | MUI Checkbox                                                                             |
| `icon:CheckCircle;green`      | [MUI Radio Button](/features/components/radioButton)                     | MUI Radio Button                                                                         |
| `icon:CheckCircle;green`      | [MUI Switch](/features/components/switch)                                | MUI Switch                                                                               |
| `icon:CheckCircle;green`      | [Data Visualization](/features/components/dataViz)                       | Data Visualization using [Recharts](https://recharts.org/)                               |
| `icon:CheckCircle;green`      | [MUI Step indicator](/features/components/stepIndicator)                 | MUI Step Indicator                                                                       |

see also:

-   [Data / Get Opts](/features/data/getOpts) - shows examples of Options Lists in use

## Props

| Status                        | Name / Link                                                              | Description                                                                                                                                          |
| ----------------------------- | ------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------- |
| `icon:Construction;indigo900` | [Dynamic Bind](/features/props/dynamicBind)                              | When a component depends on data from another component. For instance a multi-step form where each step depends on chosen option from previous step. See also [tables/forms](/features/tables/forms) |

## Forms

| Status                        | Name / Link                                                              | Description                               |
| ----------------------------- | ------------------------------------------------------------------------ | ----------------------------------------- |
| `icon:Construction;indigo900` | [Inputs](/features/forms/inputs)                                         | Form inputs; use a TextField instead      |
| `icon:Construction;indigo900` | [Input Labels](/features/forms/labels)                                   | Form Input labels; use a TextFiel instead |
| `icon:Construction;indigo900` | [Submit Mutliple Forms](/features/forms/procComposition/999)             | Submit multiple Forms at once             |
| `icon:Construction;indigo900` | [Grid Layout](/features/forms/grid)                                      | Layout Components in a Grid               |

## Sandbox / WIP

*The following is holding space for short-term work.*

| Status                        | Name / Link                                                              | Description                              |
| ----------------------------- | ------------------------------------------------------------------------ | ---------------------------------------- |
| `icon:Construction;indigo900` | [Talent Mobile](/features/data/complex1)                                 | Mobile Talent screen(s)                  |
| `icon:CheckCircle;green`      | [PDF export](/pdf/)                                                      | Export PDF, eg. Invoices, Paychecks, etc |
| `icon:Construction;indigo900` | [Roles and Access Rights](/features/rolesAndAccessRights)                | Roles and Access Rights views            |
| `icon:Construction;indigo900` | [Time Entry WIP](/features/timecardEntryWIP)                             | Timecard Entry playground                |

        </Markdown>

        <Box _for="pageOverScroll" height="200px" />

    </PageContent>
</Page>
